apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/Users/uagrawal/pentesting/skills/mysql"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      annotations: 
      vault.hashicorp.com/agent-inject: 'true'
      vault.hashicorp.com/role: policy-app
      vault.hashicorp.com/agent-inject-secret-database-config.txt: 'internal/data/database/config'
      # vault.hashicorp.com/agent-inject-template-config: |
      #   {{ with secret "database/data/config" -}}
      #     export MYSQL_ROOT_PASSWORD="{{ .Data.password }} "
      #   {{- end}}
      labels:
        app: mysql
    spec:
      selectServiceAccount: utk
      containers:
      - image: mariadb:10.5.8
        name: mysql
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: test
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim